<?php

/**
 * BIDS WebRTC Signaling API
 * PHP version 7.4
 *
 * @package dev_t0r\bids_rtc\signaling
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 * Extend this class with your controller. You can inject dependencies via class constructor,
 * @see https://github.com/PHP-DI/Slim-Bridge basic example.
 */
namespace dev_t0r\bids_rtc\signaling\api;

use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Message\ResponseInterface;
use Slim\Exception\HttpNotImplementedException;

/**
 * AbstractClientManagementApi Class Doc Comment
 *
 * @package dev_t0r\bids_rtc\signaling\api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
abstract class AbstractClientManagementApi
{
    /**
     * DELETE deleteClientInfo
     * Summary: Clientの情報を削除する
     * Notes: クライアントの情報を削除する
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string $clientId クライアントID
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function deleteClientInfo(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $clientId
    ): ResponseInterface {
        $message = "How about implementing deleteClientInfo as a DELETE method in dev_t0r\bids_rtc\signaling\api\ClientManagementApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * PUT getClientAccessToken
     * Summary: Clientのアクセストークンを取得する
     * Notes: リフレッシュトークンを用いて、アクセストークンを取得する
     * Output-Formats: [application/jose, application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getClientAccessToken(
        ServerRequestInterface $request,
        ResponseInterface $response
    ): ResponseInterface {
        $body = $request->getParsedBody();
        $message = "How about implementing getClientAccessToken as a PUT method in dev_t0r\bids_rtc\signaling\api\ClientManagementApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getClientInfo
     * Summary: Clientの情報を取得する
     * Notes: IDを指定してクライアントの情報を取得する
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string $clientId クライアントID
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getClientInfo(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $clientId
    ): ResponseInterface {
        $message = "How about implementing getClientInfo as a GET method in dev_t0r\bids_rtc\signaling\api\ClientManagementApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getClientInfoList
     * Summary: Clientの情報一覧を取得する
     * Notes: ユーザーに紐づいたクライアントの情報一覧を取得する  ページングは未実装
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getClientInfoList(
        ServerRequestInterface $request,
        ResponseInterface $response
    ): ResponseInterface {
        $message = "How about implementing getClientInfoList as a GET method in dev_t0r\bids_rtc\signaling\api\ClientManagementApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * POST registerClientInfo
     * Summary: Clientの情報を登録する
     * Notes: クライアントの情報を登録する
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function registerClientInfo(
        ServerRequestInterface $request,
        ResponseInterface $response
    ): ResponseInterface {
        $body = $request->getParsedBody();
        $message = "How about implementing registerClientInfo as a POST method in dev_t0r\bids_rtc\signaling\api\ClientManagementApi class?";
        throw new HttpNotImplementedException($request, $message);
    }
}
